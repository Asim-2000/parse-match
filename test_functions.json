[
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "nodeRNG", "raw": "\"nodeRNG\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "rng" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/rng",
                          "raw": "\"../lib/rng\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "rng" },
                      "property": { "type": "Identifier", "name": "name" }
                    },
                    {
                      "type": "Literal",
                      "value": "nodeRNG",
                      "raw": "\"nodeRNG\""
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "bytes" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "rng" },
                      "arguments": []
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "bytes" },
                      "property": { "type": "Identifier", "name": "length" }
                    },
                    { "type": "Literal", "value": 16, "raw": "16" }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": { "type": "Identifier", "name": "i" },
                      "init": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  ],
                  "kind": "var"
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": { "type": "Identifier", "name": "i" },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "bytes" },
                    "property": { "type": "Identifier", "name": "length" }
                  }
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "argument": { "type": "Identifier", "name": "i" },
                  "prefix": false
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "assert" },
                          "property": { "type": "Identifier", "name": "equal" }
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "bytes"
                              },
                              "property": { "type": "Identifier", "name": "i" }
                            },
                            "prefix": true
                          },
                          {
                            "type": "Literal",
                            "value": "number",
                            "raw": "\"number\""
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "mathRNG", "raw": "\"mathRNG\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "rng" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/rng-browser",
                          "raw": "\"../lib/rng-browser\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "rng" },
                      "property": { "type": "Identifier", "name": "name" }
                    },
                    {
                      "type": "Literal",
                      "value": "mathRNG",
                      "raw": "\"mathRNG\""
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "bytes" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "rng" },
                      "arguments": []
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "bytes" },
                      "property": { "type": "Identifier", "name": "length" }
                    },
                    { "type": "Literal", "value": 16, "raw": "16" }
                  ]
                }
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": { "type": "Identifier", "name": "i" },
                      "init": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  ],
                  "kind": "var"
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": { "type": "Identifier", "name": "i" },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "bytes" },
                    "property": { "type": "Identifier", "name": "length" }
                  }
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "argument": { "type": "Identifier", "name": "i" },
                  "prefix": false
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "assert" },
                          "property": { "type": "Identifier", "name": "equal" }
                        },
                        "arguments": [
                          {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "bytes"
                              },
                              "property": { "type": "Identifier", "name": "i" }
                            },
                            "prefix": true
                          },
                          {
                            "type": "Literal",
                            "value": "number",
                            "raw": "\"number\""
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "cryptoRNG", "raw": "\"cryptoRNG\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "randomFillSync" },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "crypto" },
                      "property": {
                        "type": "Identifier",
                        "name": "randomFillSync"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "Object" },
                        "property": { "type": "Identifier", "name": "keys" }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "require" },
                          "property": { "type": "Identifier", "name": "cache" }
                        }
                      ]
                    },
                    "property": { "type": "Identifier", "name": "forEach" }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [{ "type": "Identifier", "name": "path" }],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Literal",
                                  "value": {},
                                  "raw": "/rng-browser/",
                                  "regex": {
                                    "pattern": "rng-browser",
                                    "flags": ""
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "arguments": [
                                { "type": "Identifier", "name": "path" }
                              ]
                            },
                            "consequent": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UnaryExpression",
                                "operator": "delete",
                                "argument": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "require"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "cache"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "path"
                                  }
                                },
                                "prefix": true
                              }
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "global" },
                    "property": { "type": "Identifier", "name": "crypto" }
                  },
                  "right": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "getRandomValues"
                        },
                        "computed": false,
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [{ "type": "Identifier", "name": "arr" }],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "bytes"
                                    },
                                    "init": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "crypto"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "randomBytes"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "arr"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "ForStatement",
                                "init": {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 0,
                                        "raw": "0"
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "<",
                                  "left": { "type": "Identifier", "name": "i" },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "arr"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                },
                                "update": {
                                  "type": "UpdateExpression",
                                  "operator": "++",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "prefix": false
                                },
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "arr"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "bytes"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "arr"
                                }
                              }
                            ]
                          },
                          "generator": false,
                          "expression": false,
                          "async": false
                        },
                        "kind": "init",
                        "method": false,
                        "shorthand": false
                      }
                    ]
                  }
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "rng" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/rng-browser",
                          "raw": "\"../lib/rng-browser\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "UnaryExpression",
                  "operator": "delete",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "global" },
                    "property": { "type": "Identifier", "name": "crypto" }
                  },
                  "prefix": true
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "rng" },
                      "property": { "type": "Identifier", "name": "name" }
                    },
                    {
                      "type": "Literal",
                      "value": "whatwgRNG",
                      "raw": "\"whatwgRNG\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "sha1 node", "raw": "\"sha1 node\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "sha1" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/sha1",
                          "raw": "\"../lib/sha1\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "HASH_SAMPLES" },
                    "property": { "type": "Identifier", "name": "forEach" }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [{ "type": "Identifier", "name": "sample" }],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "equal"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "hashToHex"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Array"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "prototype"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "slice"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "sha1"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "sample"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "input"
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "sha1"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "sha1 browser",
          "raw": "\"sha1 browser\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "sha1" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/sha1-browser",
                          "raw": "\"../lib/sha1-browser\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "HASH_SAMPLES" },
                    "property": { "type": "Identifier", "name": "forEach" }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [{ "type": "Identifier", "name": "sample" }],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "equal"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "hashToHex"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "sha1"
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "sample"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "input"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "sha1"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "md5 node", "raw": "\"md5 node\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "md5" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/md5",
                          "raw": "\"../lib/md5\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "HASH_SAMPLES" },
                    "property": { "type": "Identifier", "name": "forEach" }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [{ "type": "Identifier", "name": "sample" }],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "equal"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "hashToHex"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Array"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "prototype"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "slice"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "apply"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "md5"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "sample"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "input"
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "md5"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "md5 browser", "raw": "\"md5 browser\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "md5" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../lib/md5-browser",
                          "raw": "\"../lib/md5-browser\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "HASH_SAMPLES" },
                    "property": { "type": "Identifier", "name": "forEach" }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [{ "type": "Identifier", "name": "sample" }],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "assert"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "equal"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "hashToHex"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "md5"
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "sample"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "input"
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "sample"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "md5"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "generator": false,
                      "expression": false,
                      "async": false
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "v3", "raw": "\"v3\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "v3" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../v3",
                          "raw": "\"../v3\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v3" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "hello.example.com",
                          "raw": "\"hello.example.com\""
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "v3" },
                          "property": { "type": "Identifier", "name": "DNS" }
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "9125a8dc-52ee-365b-a5aa-81b0b3681cf6",
                      "raw": "\"9125a8dc-52ee-365b-a5aa-81b0b3681cf6\""
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v3" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "http://example.com/hello",
                          "raw": "\"http://example.com/hello\""
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "v3" },
                          "property": { "type": "Identifier", "name": "URL" }
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "c6235813-3ba4-3801-ae84-e0a6ebb7d138",
                      "raw": "\"c6235813-3ba4-3801-ae84-e0a6ebb7d138\""
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v3" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "hello",
                          "raw": "\"hello\""
                        },
                        {
                          "type": "Literal",
                          "value": "0f5abcd1-c194-47f3-905b-2df7263a084b",
                          "raw": "\"0f5abcd1-c194-47f3-905b-2df7263a084b\""
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "a981a0c2-68b1-35dc-bcfc-296e52ab01ec",
                      "raw": "\"a981a0c2-68b1-35dc-bcfc-296e52ab01ec\""
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "buf" },
                    "init": {
                      "type": "NewExpression",
                      "callee": { "type": "Identifier", "name": "Array" },
                      "arguments": [
                        { "type": "Literal", "value": 16, "raw": "16" }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "testBuf" },
                    "init": {
                      "type": "ArrayExpression",
                      "elements": [
                        { "type": "Literal", "value": 145, "raw": "0x91" },
                        { "type": "Literal", "value": 37, "raw": "0x25" },
                        { "type": "Literal", "value": 168, "raw": "0xa8" },
                        { "type": "Literal", "value": 220, "raw": "0xdc" },
                        { "type": "Literal", "value": 82, "raw": "0x52" },
                        { "type": "Literal", "value": 238, "raw": "0xee" },
                        { "type": "Literal", "value": 54, "raw": "0x36" },
                        { "type": "Literal", "value": 91, "raw": "0x5b" },
                        { "type": "Literal", "value": 165, "raw": "0xa5" },
                        { "type": "Literal", "value": 170, "raw": "0xaa" },
                        { "type": "Literal", "value": 129, "raw": "0x81" },
                        { "type": "Literal", "value": 176, "raw": "0xb0" },
                        { "type": "Literal", "value": 179, "raw": "0xb3" },
                        { "type": "Literal", "value": 104, "raw": "0x68" },
                        { "type": "Literal", "value": 28, "raw": "0x1c" },
                        { "type": "Literal", "value": 246, "raw": "0xf6" }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "v3" },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "hello.example.com",
                      "raw": "\"hello.example.com\""
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "v3" },
                      "property": { "type": "Identifier", "name": "DNS" }
                    },
                    { "type": "Identifier", "name": "buf" }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "ok" }
                  },
                  "arguments": [
                    {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "length" }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "testBuf" },
                          "property": { "type": "Identifier", "name": "length" }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "every" }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "elem" },
                              { "type": "Identifier", "name": "idx" }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "elem"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "testBuf"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "idx"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": { "type": "Identifier", "name": "buf" },
                  "right": {
                    "type": "NewExpression",
                    "callee": { "type": "Identifier", "name": "Array" },
                    "arguments": [
                      { "type": "Literal", "value": 19, "raw": "19" }
                    ]
                  }
                }
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": { "type": "Identifier", "name": "i" },
                      "init": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  ],
                  "kind": "var"
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": { "type": "Identifier", "name": "i" },
                  "right": { "type": "Literal", "value": 3, "raw": "3" }
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "argument": { "type": "Identifier", "name": "i" },
                  "prefix": true
                },
                "body": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": { "type": "Identifier", "name": "buf" },
                      "property": { "type": "Identifier", "name": "i" }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "landmaster",
                      "raw": "\"landmaster\""
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "v3" },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "hello.example.com",
                      "raw": "\"hello.example.com\""
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "v3" },
                      "property": { "type": "Identifier", "name": "DNS" }
                    },
                    { "type": "Identifier", "name": "buf" },
                    { "type": "Literal", "value": 3, "raw": "3" }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "ok" }
                  },
                  "arguments": [
                    {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "length" }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "testBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          },
                          "right": { "type": "Literal", "value": 3, "raw": "3" }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "every" }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "elem" },
                              { "type": "Identifier", "name": "idx" }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": ">=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "idx"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "3"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "elem"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "testBuf"
                                        },
                                        "property": {
                                          "type": "BinaryExpression",
                                          "operator": "-",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "idx"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 3,
                                            "raw": "3"
                                          }
                                        }
                                      }
                                    },
                                    "alternate": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "elem"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "landmaster",
                                        "raw": "\"landmaster\""
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                          }
                        ]
                      }
                    },
                    { "type": "Literal", "value": "hello", "raw": "\"hello\"" }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "v5", "raw": "\"v5\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "v5" },
                    "init": {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "require" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "../v5",
                          "raw": "\"../v5\""
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v5" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "hello.example.com",
                          "raw": "\"hello.example.com\""
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "v5" },
                          "property": { "type": "Identifier", "name": "DNS" }
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "fdda765f-fc57-5604-a269-52a7df8164ec",
                      "raw": "\"fdda765f-fc57-5604-a269-52a7df8164ec\""
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v5" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "http://example.com/hello",
                          "raw": "\"http://example.com/hello\""
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "v5" },
                          "property": { "type": "Identifier", "name": "URL" }
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "3bbcee75-cecc-5b56-8031-b6641c1ed1f1",
                      "raw": "\"3bbcee75-cecc-5b56-8031-b6641c1ed1f1\""
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "equal" }
                  },
                  "arguments": [
                    {
                      "type": "CallExpression",
                      "callee": { "type": "Identifier", "name": "v5" },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "hello",
                          "raw": "\"hello\""
                        },
                        {
                          "type": "Literal",
                          "value": "0f5abcd1-c194-47f3-905b-2df7263a084b",
                          "raw": "\"0f5abcd1-c194-47f3-905b-2df7263a084b\""
                        }
                      ]
                    },
                    {
                      "type": "Literal",
                      "value": "90123e1c-7512-523e-bb28-76fab9f2f73d",
                      "raw": "\"90123e1c-7512-523e-bb28-76fab9f2f73d\""
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "buf" },
                    "init": {
                      "type": "NewExpression",
                      "callee": { "type": "Identifier", "name": "Array" },
                      "arguments": [
                        { "type": "Literal", "value": 16, "raw": "16" }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "testBuf" },
                    "init": {
                      "type": "ArrayExpression",
                      "elements": [
                        { "type": "Literal", "value": 253, "raw": "0xfd" },
                        { "type": "Literal", "value": 218, "raw": "0xda" },
                        { "type": "Literal", "value": 118, "raw": "0x76" },
                        { "type": "Literal", "value": 95, "raw": "0x5f" },
                        { "type": "Literal", "value": 252, "raw": "0xfc" },
                        { "type": "Literal", "value": 87, "raw": "0x57" },
                        { "type": "Literal", "value": 86, "raw": "0x56" },
                        { "type": "Literal", "value": 4, "raw": "0x04" },
                        { "type": "Literal", "value": 162, "raw": "0xa2" },
                        { "type": "Literal", "value": 105, "raw": "0x69" },
                        { "type": "Literal", "value": 82, "raw": "0x52" },
                        { "type": "Literal", "value": 167, "raw": "0xa7" },
                        { "type": "Literal", "value": 223, "raw": "0xdf" },
                        { "type": "Literal", "value": 129, "raw": "0x81" },
                        { "type": "Literal", "value": 100, "raw": "0x64" },
                        { "type": "Literal", "value": 236, "raw": "0xec" }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "v5" },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "hello.example.com",
                      "raw": "\"hello.example.com\""
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "v5" },
                      "property": { "type": "Identifier", "name": "DNS" }
                    },
                    { "type": "Identifier", "name": "buf" }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "ok" }
                  },
                  "arguments": [
                    {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "length" }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "testBuf" },
                          "property": { "type": "Identifier", "name": "length" }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "every" }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "elem" },
                              { "type": "Identifier", "name": "idx" }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "elem"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "testBuf"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "idx"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": { "type": "Identifier", "name": "buf" },
                  "right": {
                    "type": "NewExpression",
                    "callee": { "type": "Identifier", "name": "Array" },
                    "arguments": [
                      { "type": "Literal", "value": 19, "raw": "19" }
                    ]
                  }
                }
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": { "type": "Identifier", "name": "i" },
                      "init": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  ],
                  "kind": "var"
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": { "type": "Identifier", "name": "i" },
                  "right": { "type": "Literal", "value": 3, "raw": "3" }
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "argument": { "type": "Identifier", "name": "i" },
                  "prefix": true
                },
                "body": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": { "type": "Identifier", "name": "buf" },
                      "property": { "type": "Identifier", "name": "i" }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "landmaster",
                      "raw": "\"landmaster\""
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "v5" },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "hello.example.com",
                      "raw": "\"hello.example.com\""
                    },
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": { "type": "Identifier", "name": "v5" },
                      "property": { "type": "Identifier", "name": "DNS" }
                    },
                    { "type": "Identifier", "name": "buf" },
                    { "type": "Literal", "value": 3, "raw": "3" }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": { "type": "Identifier", "name": "assert" },
                    "property": { "type": "Identifier", "name": "ok" }
                  },
                  "arguments": [
                    {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "length" }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "testBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          },
                          "right": { "type": "Literal", "value": 3, "raw": "3" }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "buf" },
                          "property": { "type": "Identifier", "name": "every" }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              { "type": "Identifier", "name": "elem" },
                              { "type": "Identifier", "name": "idx" }
                            ],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ConditionalExpression",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": ">=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "idx"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 3,
                                        "raw": "3"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "elem"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "testBuf"
                                        },
                                        "property": {
                                          "type": "BinaryExpression",
                                          "operator": "-",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "idx"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 3,
                                            "raw": "3"
                                          }
                                        }
                                      }
                                    },
                                    "alternate": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "elem"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "landmaster",
                                        "raw": "\"landmaster\""
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "generator": false,
                            "expression": false,
                            "async": false
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        { "type": "Literal", "value": "msec", "raw": "\"msec\"" },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "uuid" },
                          "property": { "type": "Identifier", "name": "v1" }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "msecs"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "TIME"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                              }
                            ]
                          }
                        ]
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "uuid" },
                          "property": { "type": "Identifier", "name": "v1" }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "msecs"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "TIME"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                              }
                            ]
                          }
                        ]
                      }
                    },
                    {
                      "type": "Literal",
                      "value": "IDs created at same msec are different",
                      "raw": "\"IDs created at same msec are different\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "exception thrown when > 10k ids created in 1ms",
          "raw": "\"exception thrown when > 10k ids created in 1ms\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "thrown" },
                    "init": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "TryStatement",
                "block": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "uuid" },
                          "property": { "type": "Identifier", "name": "v1" }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "msecs"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Identifier",
                                  "name": "TIME"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "nsecs"
                                },
                                "computed": false,
                                "value": {
                                  "type": "Literal",
                                  "value": 10000,
                                  "raw": "10000"
                                },
                                "kind": "init",
                                "method": false,
                                "shorthand": false
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "handler": {
                  "type": "CatchClause",
                  "param": { "type": "Identifier", "name": "e" },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": { "type": "Identifier", "name": "thrown" },
                          "right": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true"
                          }
                        }
                      }
                    ]
                  }
                },
                "finalizer": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    { "type": "Identifier", "name": "thrown" },
                    {
                      "type": "Literal",
                      "value": "Exception thrown when > 10K ids created in 1 ms",
                      "raw": "\"Exception thrown when > 10K ids created in 1 ms\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "clock regression by msec",
          "raw": "\"clock regression by msec\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "uidt" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": { "type": "Identifier", "name": "TIME" },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "uidtb" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "-",
                                "left": {
                                  "type": "Identifier",
                                  "name": "TIME"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1"
                                }
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "parseInt"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "uidtb"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "split"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "-",
                                    "raw": "\"-\""
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "3"
                              }
                            },
                            { "type": "Literal", "value": 16, "raw": "16" }
                          ]
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "parseInt"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "uidt"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "split"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "-",
                                    "raw": "\"-\""
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "3"
                              }
                            },
                            { "type": "Literal", "value": 16, "raw": "16" }
                          ]
                        }
                      },
                      "right": { "type": "Literal", "value": 1, "raw": "1" }
                    },
                    {
                      "type": "Literal",
                      "value": "Clock regression by msec increments the clockseq",
                      "raw": "\"Clock regression by msec increments the clockseq\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "clock regression by nsec",
          "raw": "\"clock regression by nsec\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "uidtn" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": { "type": "Identifier", "name": "TIME" },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "nsecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 10,
                                "raw": "10"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "uidtnb" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": { "type": "Identifier", "name": "TIME" },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "nsecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 9,
                                "raw": "9"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "parseInt"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "uidtnb"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "split"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "-",
                                    "raw": "\"-\""
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "3"
                              }
                            },
                            { "type": "Literal", "value": 16, "raw": "16" }
                          ]
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "parseInt"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "uidtn"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "split"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "-",
                                    "raw": "\"-\""
                                  }
                                ]
                              },
                              "property": {
                                "type": "Literal",
                                "value": 3,
                                "raw": "3"
                              }
                            },
                            { "type": "Literal", "value": 16, "raw": "16" }
                          ]
                        }
                      },
                      "right": { "type": "Literal", "value": 1, "raw": "1" }
                    },
                    {
                      "type": "Literal",
                      "value": "Clock regression by nsec increments the clockseq",
                      "raw": "\"Clock regression by nsec increments the clockseq\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "explicit options product expected id",
          "raw": "\"explicit options product expected id\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "id" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 1321651533573,
                                "raw": "1321651533573"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "nsecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 5432,
                                "raw": "5432"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "clockseq"
                              },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 14428,
                                "raw": "0x385c"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "node" },
                              "computed": false,
                              "value": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "Literal",
                                    "value": 97,
                                    "raw": "0x61"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 205,
                                    "raw": "0xcd"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 60,
                                    "raw": "0x3c"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 187,
                                    "raw": "0xbb"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 50,
                                    "raw": "0x32"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 16,
                                    "raw": "0x10"
                                  }
                                ]
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": { "type": "Identifier", "name": "id" },
                      "right": {
                        "type": "Literal",
                        "value": "d9428888-122b-11e1-b85c-61cd3cbb3210",
                        "raw": "\"d9428888-122b-11e1-b85c-61cd3cbb3210\""
                      }
                    },
                    {
                      "type": "Literal",
                      "value": "Explicit options produce expected id",
                      "raw": "\"Explicit options produce expected id\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  },
  {
    "type": "ExpressionStatement",
    "expression": {
      "type": "CallExpression",
      "callee": { "type": "Identifier", "name": "test" },
      "arguments": [
        {
          "type": "Literal",
          "value": "ids spanning 1ms boundary are 100ns apart",
          "raw": "\"ids spanning 1ms boundary are 100ns apart\""
        },
        {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "u0" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": { "type": "Identifier", "name": "TIME" },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "nsecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 9999,
                                "raw": "9999"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "u1" },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": { "type": "Identifier", "name": "uuid" },
                        "property": { "type": "Identifier", "name": "v1" }
                      },
                      "arguments": [
                        {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "msecs" },
                              "computed": false,
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "TIME"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1,
                                  "raw": "1"
                                }
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            },
                            {
                              "type": "Property",
                              "key": { "type": "Identifier", "name": "nsecs" },
                              "computed": false,
                              "value": {
                                "type": "Literal",
                                "value": 0,
                                "raw": "0"
                              },
                              "kind": "init",
                              "method": false,
                              "shorthand": false
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "before" },
                    "init": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "u0" },
                          "property": { "type": "Identifier", "name": "split" }
                        },
                        "arguments": [
                          { "type": "Literal", "value": "-", "raw": "\"-\"" }
                        ]
                      },
                      "property": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "after" },
                    "init": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": { "type": "Identifier", "name": "u1" },
                          "property": { "type": "Identifier", "name": "split" }
                        },
                        "arguments": [
                          { "type": "Literal", "value": "-", "raw": "\"-\"" }
                        ]
                      },
                      "property": { "type": "Literal", "value": 0, "raw": "0" }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": { "type": "Identifier", "name": "dt" },
                    "init": {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "CallExpression",
                        "callee": { "type": "Identifier", "name": "parseInt" },
                        "arguments": [
                          { "type": "Identifier", "name": "after" },
                          { "type": "Literal", "value": 16, "raw": "16" }
                        ]
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": { "type": "Identifier", "name": "parseInt" },
                        "arguments": [
                          { "type": "Identifier", "name": "before" },
                          { "type": "Literal", "value": 16, "raw": "16" }
                        ]
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": { "type": "Identifier", "name": "assert" },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": { "type": "Identifier", "name": "dt" },
                      "right": { "type": "Literal", "value": 1, "raw": "1" }
                    },
                    {
                      "type": "Literal",
                      "value": "Ids spanning 1ms boundary are 100ns apart",
                      "raw": "\"Ids spanning 1ms boundary are 100ns apart\""
                    }
                  ]
                }
              }
            ]
          },
          "generator": false,
          "expression": false,
          "async": false
        }
      ]
    }
  }
]
